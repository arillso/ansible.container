---
# https://github.com/ansible-collections/community.docker/pull/586
# - name: Install Docker Compose packages
#   become: true
#   ansible.builtin.package:
#     name: "{{ item }}"
#     state: present
#   loop: "{{ docker_compose_packages }}"

- name: Installiere docker-compose wo pip
  ansible.builtin.pip:
    name: docker-compose
    extra_args: --break-system-packages

- name: Ensure Docker Compose directory exists with correct permissions
  become: true
  ansible.builtin.file:
    path: "{{ docker_compose_directory }}"
    state: directory
    mode: "0755"

- name: Manage Docker Compose Setup
  when: docker_compose_config | length > 0
  block:
    - name: Configure Docker Compose environment
      when: docker_compose_use_file
      block:
        - name: Set up Docker Compose systemd service on target host
          become: true
          ansible.builtin.template:
            src: etc/systemd/system/docker-compose@.service.j2
            dest: /etc/systemd/system/docker-compose@.service
            owner: root
            group: root
            mode: "0644"

        - name: Create Docker Compose configuration file from template
          become: true
          ansible.builtin.template:
            src: etc/docker/compose/docker-compose.yml.j2
            dest: "{{ docker_compose_directory_path }}/{{ docker_compose_project }}/docker-compose.yml"
            owner: root
            group: root
            mode: "0644"

    - name: Launch Docker Compose based on specified configuration
      become: true
      community.docker.docker_compose:
        project_src: "{{ docker_compose_directory if docker_compose_use_file else omit }}"
        definition: "{{ docker_compose_config if not docker_compose_use_file else omit }}"
        api_version: "{{ docker_compose_api_version }}"
        build: "{{ docker_compose_build }}"
        ca_cert: "{{ docker_compose_ca_cert }}"
        client_cert: "{{ docker_compose_client_cert }}"
        client_key: "{{ docker_compose_client_key }}"
        debug: "{{ docker_compose_debug }}"
        dependencies: "{{ docker_compose_dependencies }}"
        docker_host: "{{ docker_compose_docker_host }}"
        env_file: "{{ docker_compose_env_file }}"
        files: "{{ docker_compose_files }}"
        hostname_check: "{{ docker_compose_hostname_check }}"
        nocache: "{{ docker_compose_nocache }}"
        profiles: "{{ docker_compose_profiles }}"
        project_name: "{{ docker_compose_project_name }}"
        pull: "{{ docker_compose_pull }}"
        recreate: "{{ docker_compose_recreate }}"
        remove_images: "{{ docker_compose_remove_images }}"
        remove_orphans: "{{ docker_compose_remove_orphans }}"
        remove_volumes: "{{ docker_compose_remove_volumes }}"
        restarted: "{{ docker_compose_restarted }}"
        scale: "{{ docker_compose_scale }}"
        services: "{{ docker_compose_services }}"
        ssl_version: "{{ docker_compose_ssl_version }}"
        state: "{{ docker_compose_state }}"
        stopped: "{{ docker_compose_stopped }}"
        timeout: "{{ docker_compose_timeout }}"
        tls: "{{ docker_compose_tls }}"
        tls_hostname: "{{ docker_compose_tls_hostname }}"
        use_ssh_client: "{{ docker_compose_use_ssh_client }}"
        validate_certs: "{{ docker_compose_validate_certs }}"
