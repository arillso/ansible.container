---
- name: Install Docker Compose packages
  become: true
  ansible.builtin.package:
    name: "{{ item.name }}"
    state: present
  loop: "{{ docker_compose_v2_packages }}"

- name: Ensure Docker Compose directory exists with correct permissions
  become: true
  ansible.builtin.file:
    path: "{{ docker_compose_v2_directory }}"
    state: directory
    mode: "0755"

- name: Manage Docker Compose Setup
  when: docker_compose_v2_config | length > 0
  block:
    - name: Configure Docker Compose environment
      when: docker_compose_v2_use_file
      block:
        - name: Set up Docker Compose systemd service on target host
          become: true
          ansible.builtin.template:
            src: etc/systemd/system/docker-compose@.service.j2
            dest: /etc/systemd/system/docker-compose@.service
            owner: root
            group: root
            mode: "0644"

        - name: Create Docker Compose configuration file from template
          become: true
          ansible.builtin.template:
            src: etc/docker/compose/docker-compose.yml.j2
            dest: "{{ docker_compose_v2_directory_path }}/{{ docker_compose_v2_project }}/docker-compose.yml"
            owner: root
            group: root
            mode: "0644"

      rescue:
        - name: Error handling if the service could not be created
          ansible.builtin.debug:
            msg: "The Docker Compose service could not be created. Please check the configuration and system logs."

    - name: Launch Docker Compose based on specified configuration
      become: true
      community.docker.docker_compose_v2:
        project_src: "{{ docker_compose_v2_directory if docker_compose_v2_use_file else omit }}"
        definition: "{{ docker_compose_v2_config if not docker_compose_v2_use_file else omit }}"
        api_version: "{{ docker_compose_v2_api_version }}"
        dependencies: "{{ docker_compose_v2_dependencies }}"
        docker_host: "{{ docker_compose_v2_docker_host }}"
        env_files: "{{ docker_compose_v2_env_file }}"
        profiles: "{{ docker_compose_v2_profiles }}"
        project_name: "{{ docker_compose_v2_project_name }}"
        recreate: "{{ docker_compose_v2_recreate }}"
        remove_images: "{{ docker_compose_v2_remove_images }}"
        remove_orphans: "{{ docker_compose_v2_remove_orphans }}"
        remove_volumes: "{{ docker_compose_v2_remove_volumes }}"
        state: "{{ docker_compose_v2_state }}"
        timeout: "{{ docker_compose_v2_timeout | default(omit, true) }}"
        tls: "{{ docker_compose_v2_tls }}"
        tls_hostname: "{{ docker_compose_v2_tls_hostname }}"
        validate_certs: "{{ docker_compose_v2_validate_certs }}"
        cli_context: "{{ docker_compose_v2_cli_context }}"
        docker_cli: "{{ docker_compose_v2_docker_cli }}"
        build: "{{ docker_compose_v2_build }}"
        ca_path: "{{ docker_compose_v2_ca_path }}"
        client_cert: "{{ docker_compose_v2_client_cert }}"
        client_key: "{{ docker_compose_v2_client_key }}"
        files: "{{ docker_compose_v2_files }}"
        pull: "{{ docker_compose_v2_pull }}"
        scale: "{{ docker_compose_v2_scale | default(omit) }}"
        services: "{{ docker_compose_v2_services }}"

  rescue:
    - name: Handle undefined docker_compose_v2_config variable
      ansible.builtin.debug:
        msg: "The variable 'docker_compose_v2_config' is not defined. Aborting the playbook due to missing configuration."
